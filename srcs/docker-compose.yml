version: '3.8'

services:
  nginx:
    container_name: nginx
    build:
      context : requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443"
    restart: on-failure
    depends_on:
      # - mariadb
      - wordpress
    networks:
      - inception
    volumes:
      - wordpress:/var/www/html
      # -  wordpress:/var/www/wordpress

  mariadb:
    container_name: mariadb
    build:
      context : requirements/mariadb
      dockerfile: Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT_PASS: ${DB_ROOT_PASS}
    env_file:
      - .env
    ports:
      - "3306"
    restart: unless-stopped
    networks:
      - inception
    volumes:
      - mariadb:/var/lib/mysql

  wordpress:
    container_name: wordpress
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - mariadb
    networks:
      - inception
    volumes:
      - wordpress:/var/www/wordpress
      # - ./:/home/tdutel/data
    expose:
      - "9000"

networks:
  inception:
    driver: bridge

volumes:
  wordpress:
    driver: local # ici nous stockons le volume en local
    driver_opts:
    type: 'none' 									# aucun type spécifique
    o: 'bind'
    device: '/home/tdutel/data/wordpress' 		#Ou stocker le dossier sur votre ordinateur en local
  mariadb:
    driver: local
    driver_opts:
    type: 'none' 
    o: 'bind'										 # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
    device: '/home/tdutel/data/mariadb'
